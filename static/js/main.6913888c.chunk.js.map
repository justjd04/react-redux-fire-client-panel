{"version":3,"sources":["components/layout/SignedOutLinks.js","config/fbConfig.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/Header.js","components/client/ClientList.js","components/layout/Dashboard.js","components/auth/SignIn.js","components/auth/Register.js","components/layout/DeleteModal.js","components/client/ClientDetail.js","store/actions/clientActions.js","components/client/ClientForm.js","components/client/AddClient.js","components/client/EditClient.js","components/layout/Setting.js","store/actions/settingActions.js","components/routes/ProtectedRoute.js","components/routes/NotProtectedRoute.js","components/routes/Router.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/clientReducer.js","store/reducers/settingReducers.js","store/reducers/rootReducer.js","index.js"],"names":["SignedOutLinks","Nav","className","navbar","NavItem","to","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appID","measurementId","firestore","auth","connect","dispatch","signOut","getState","then","type","profile","style","display","justifyContent","width","listStyle","name","exact","cursor","onClick","state","useState","isOpen","setIsOpen","Navbar","color","light","fixed","expand","Container","NavbarBrand","NavbarToggler","Collapse","isLoaded","uid","component","ClientList","clients","length","Row","Col","sm","md","Table","striped","responsive","map","client","firstName","lastName","email","balance","id","Button","size","compose","ordered","setting","firestoreConnect","props","collection","where","doc","totalBalance","forEach","parseFloat","toFixed","updateTotalBalance","allowNewClient","authError","signIn","credentials","signInWithEmailAndPassword","password","catch","err","setEmail","setPassword","handleChange","e","target","value","offset","Card","CardBody","Form","onSubmit","preventDefault","FormGroup","Label","for","Input","placeholder","onChange","block","Alert","signUp","newUser","createUserWithEmailAndPassword","res","user","set","disabledBalanceOnAdd","disabledBalanceOnEdit","message","setName","trim","pattern","title","required","DeleteModal","modal","toggle","removeClient","Modal","ModalBody","ModalFooter","ownProps","match","params","updateBalance","newBalance","update","error","deleteClient","delete","history","setBalance","setModal","ButtonGroup","push","CardHeader","UncontrolledCollapse","toggler","InputGroup","InputGroupAddon","addonType","outline","ListGroup","ListGroupItem","mobile","ClientForm","handleSubmit","disableBalance","disabled","AddClient","setState","addClient","this","isEmpty","Component","clientDetail","authorId","add","EditClient","updateClientDetail","newProps","updateSetting","updatedSetting","data","setAllowNewClient","setDisabledBalanceOnAdd","setDisabledBalanceOnEdit","hasUpdated","setHasUpdated","useEffect","CustomInput","checked","label","inline","rest","render","Router","path","SignIn","SignUp","Dashboard","ClientDetail","Setting","App","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","initState","authReducer","action","clientReducer","settingReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","rrfProps","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"oWAiBeA,EAbQ,WACrB,OACI,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAUC,QAAM,EAA/B,UACE,cAACC,EAAA,EAAD,CAASF,UAAU,OAAnB,SACE,cAAC,IAAD,CAASG,GAAG,SAAZ,qBAEF,cAACD,EAAA,EAAD,UACE,cAAC,IAAD,CAASC,GAAG,YAAZ,4B,8BCIVC,IAASC,cAVI,CACXC,OAAQC,0CACRC,WAAYD,qCACZE,UAAWF,qBACXG,cAAeH,iCACfI,kBAAmBJ,eACnBK,MAAOL,4CACPM,cAAeN,iBAKjB,IAAMO,EAAYV,IAASU,YACrBC,EAAOX,IAASW,OCsBPC,cAAQ,MANI,SAACC,GAC1B,MAAO,CACLC,QAAS,kBAAMD,GCnBV,SAACA,EAAUE,GAChBJ,EAAKG,UAAUE,MAAK,WAClBH,EAAS,CAACI,KAAM,8BDqBPL,EAlCO,SAAC,GAA0B,IAAxBE,EAAuB,EAAvBA,QAASI,EAAc,EAAdA,QAChC,OACE,sBACEC,MAAO,CACLC,QAAS,OACTC,eAAgB,gBAChBC,MAAO,MACPC,UAAW,QALf,UAQE,cAACzB,EAAA,EAAD,UAAUoB,EAAQM,OAClB,cAAC1B,EAAA,EAAD,UACE,cAAC,IAAD,CAAS2B,OAAO,EAAM1B,GAAG,IAAzB,yBAIF,cAACD,EAAA,EAAD,UACE,cAAC,IAAD,CAASC,GAAG,WAAZ,uBAEF,cAACD,EAAA,EAAD,UACE,qBAAKqB,MAAO,CAAEO,OAAQ,WAAaC,QAASb,EAA5C,4B,QEqBOF,eAPS,SAAAgB,GACtB,MAAM,CACJjB,KAAMiB,EAAM5B,SAASW,KACrBO,QAASU,EAAM5B,SAASkB,WAIbN,EAxCA,SAAC,GAAuB,IAArBD,EAAoB,EAApBA,KAAMO,EAAc,EAAdA,QAAc,EAERW,oBAAS,GAFD,mBAE7BC,EAF6B,KAErBC,EAFqB,KAkBpC,OACE,8BACE,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,OAAK,EAACtC,UAAU,aAAauC,MAAM,MAAMC,OAAO,KAAxE,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,2BACA,cAACC,EAAA,EAAD,CAAeZ,QAnBR,WACbI,GAAWD,MAmBL,cAACU,EAAA,EAAD,CAAUV,OAAQA,EAAQjC,QAAM,EAAhC,SAhBU,WAChB,GAAI4C,mBAAS9B,GACX,OAAGA,EAAK+B,IACC,cAAC,EAAD,CAAexB,QAASA,IAExB,cAAC,EAAD,IAYFyB,e,4CCKEC,EAjCI,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OACGA,EAAQC,OAAS,EAAK,cAACC,EAAA,EAAD,UACrB,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKtD,UAAU,OAA/B,SACE,eAACuD,EAAA,EAAD,CAAOC,SAAO,EAACC,YAAU,EAAzB,UACE,gCACA,+BACE,sCACA,uCACA,yCACA,4BAGF,gCACER,GAAYA,EAAQS,KAAI,SAAAC,GAAM,OAAK,+BACnC,qBAAI3D,UAAU,kBAAd,UAAgC,+BAAO2D,EAAOC,YAA9C,IAAgE,+BAAOD,EAAOE,cAC9E,6BAAKF,EAAOG,QACZ,mCAAMH,EAAOI,WACb,6BACE,cAAC,IAAD,CAAS5D,GAAE,kBAAawD,EAAOK,IAA/B,SACE,eAACC,EAAA,EAAD,CAAQ5B,MAAM,YAAY6B,KAAK,KAAKlE,UAAU,iCAA9C,UAA+E,mBAC7EA,UAAU,mCADZ,kBANwC2D,EAAOK,gBAelD,oBAAIhE,UAAU,OAAd,2BCsBEmE,cACbnD,aATsB,SAAC,GAAmD,IAArCD,EAAoC,EAAhDX,SAAYW,KAAqBqD,EAAe,EAA5BtD,UAAasD,QAC1D,MAAM,CACJnB,QAASmB,EAAQnB,QACjBoB,QAASD,EAAQC,QAAUD,EAAQC,QAAQ,GAAI,KAC/CtD,WAMFuD,4BAAiB,SAAAC,GAAK,MAAI,CACxB,CACEC,WAAY,UACZC,MAAO,CAAC,CAAC,WAAY,KAAMF,EAAMxD,KAAK+B,OAExC,CACE0B,WAAY,UACZE,IAAKH,EAAMxD,KAAK+B,SATPqB,EA/CG,SAAC,GAA0B,IAAxBlB,EAAuB,EAAvBA,QAASoB,EAAc,EAAdA,QAW5B,OACE,eAAC5B,EAAA,EAAD,WACE,eAACU,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKtD,UAAU,gEAA/B,UACE,sBAAKA,UAAU,SAAf,UACE,sBAAMA,UAAU,iCAAhB,SACE,mBAAGA,UAAU,mBAEf,oBAAIA,UAAU,OAAd,wBAEF,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,OAAd,wBACA,qBAAIA,UAAU,yBAAd,cAA0CiD,EArBzB,SAACA,GAC1B,IAAI0B,EAAe,EAInB,OAHA1B,EAAQ2B,SAAQ,SAACjB,GACfgB,GAAgBE,WAAWlB,EAAOI,YAE7BY,EAAaG,QAAQ,GAgBiCC,CAAmB9B,GAAW,WAGvF,cAACG,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAItD,UAAU,sDAA9B,SAEI6C,mBAASwB,IAAY,8BAAOA,GAAWA,EAAQW,gBAAmB,cAAC,IAAD,CAAS7E,GAAG,OAAZ,SAChE,cAAC8D,EAAA,EAAD,CAAQ5B,MAAM,UAAU6B,KAAK,KAAKlE,UAAU,OAA5C,4BAKN6C,mBAASI,IAAY,cAAC,EAAD,CAAYA,QAASA,U,+DC0BnCjC,eARS,SAAAgB,GACtB,MAAM,CACJiD,UAAWjD,EAAMjB,KAAKkE,cAIC,SAAAhE,GAAQ,MAAK,CAACiE,OAAQ,SAACC,GAAD,OAAiBlE,EJ/D5C,SAACkE,GACrB,OAAO,SAAClE,EAAUE,GAChBJ,EAAKqE,2BACHD,EAAYrB,MACZqB,EAAYE,UACZjE,MAAK,WACLH,EAAS,CAACI,KAAM,qBACfiE,OAAM,SAACC,GACRtE,EAAS,CAACI,KAAM,cAAekE,YIuDsCL,CAAOC,QAEnEnE,EA/DA,SAAC,GAAyB,IAAxBiE,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,OAAY,EAEZjD,mBAAS,IAFG,mBAE/B6B,EAF+B,KAExB0B,EAFwB,OAGNvD,mBAAS,IAHH,mBAG/BoD,EAH+B,KAGrBI,EAHqB,KAKhCC,EAAe,SAACC,GACD,UAAhBA,EAAEC,OAAO5B,GACVwB,EAASG,EAAEC,OAAOC,OAElBJ,EAAYE,EAAEC,OAAOC,QAUzB,OACE,cAACpD,EAAA,EAAD,CAAWzC,UAAU,OAArB,SACE,cAACmD,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAI,CAACY,KAAM,EAAG4B,OAAQ,GAAnC,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,sBAAKhG,UAAU,qCAAf,UACE,qBAAKA,UAAU,4BAAf,SACE,sBAAMA,UAAU,oBAAhB,SACE,mBAAGA,UAAU,oBAGjB,oBAAIA,UAAU,oDAAd,sBAEF,eAACiG,EAAA,EAAD,CAAMC,SApBG,SAACP,GACpBA,EAAEQ,iBACFjB,EAAO,CAACpB,QAAOuB,cAkBL,UACE,eAACe,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,eAAX,mBACA,cAACC,EAAA,EAAD,CAAOlF,KAAK,QAAQwE,MAAO/B,EAAOE,GAAG,QAAQwC,YAAY,QAAQC,SAAUf,OAE7E,eAACU,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,sBACA,cAACC,EAAA,EAAD,CAAOlF,KAAK,WAAWwE,MAAOR,EAAUrB,GAAG,WAAWwC,YAAY,WAAWC,SAAUf,OAEzF,cAACzB,EAAA,EAAD,CAAQ5B,MAAM,UAAUqE,OAAK,EAA7B,sBAEDzB,GAAa,cAAC0B,EAAA,EAAD,CAAO3G,UAAU,OAAOqC,MAAM,SAA9B,SACV4C,kBC4BHjE,eAZS,SAAAgB,GACtB,MAAM,CACJiD,UAAWjD,EAAMjB,KAAKkE,cAIC,SAAChE,GAC1B,MAAM,CACJ2F,OAAQ,SAACC,GAAD,OAAa5F,ELlDH,SAAC4F,GACrB,OAAO,SAAC5F,EAAUE,GAChBJ,EAAK+F,+BACHD,EAAQ/C,MAAO+C,EAAQxB,UACvBjE,MAAK,SAAC2F,GAKN,OAJAjG,EAAU0D,WAAW,SAASE,IAAIqC,EAAIC,KAAKlE,KACxCmE,IAAI,CACHrF,KAAMiF,EAAQjF,OAEXmF,EAAIC,KAAKlE,OACf1B,MAAK,SAAC0B,GACPhC,EAAU0D,WAAW,WAAWE,IAAI5B,GAAKmE,IAAI,CAC3CjC,gBAAgB,EAChBkC,sBAAsB,EACtBC,uBAAuB,IACtB/F,MAAK,WACNH,EAAS,CACPI,KAAM,yBAGTiE,OAAM,SAACC,GACRtE,EAAS,CAACI,KAAM,eAAgBkE,IAAKA,EAAI6B,cK6BbR,CAAOC,QAI1B7F,EAzEE,SAAC,GAAyB,IAAxBiE,EAAuB,EAAvBA,UAAW2B,EAAY,EAAZA,OAAY,EAEhB3E,mBAAS,IAFO,mBAEjCL,EAFiC,KAE3ByF,EAF2B,OAGdpF,mBAAS,IAHK,mBAGjC6B,EAHiC,KAG1B0B,EAH0B,OAIRvD,mBAAS,IAJD,mBAIjCoD,EAJiC,KAIvBI,EAJuB,KAMlCC,EAAe,SAACC,GACD,SAAhBA,EAAEC,OAAO5B,GACVqD,EAAQ1B,EAAEC,OAAOC,OACM,UAAhBF,EAAEC,OAAO5B,GAChBwB,EAASG,EAAEC,OAAOC,MAAMyB,QAExB7B,EAAYE,EAAEC,OAAOC,MAAMyB,SAS/B,OACE,cAAC7E,EAAA,EAAD,CAAWzC,UAAU,OAArB,SACE,cAACmD,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAI,CAACY,KAAM,EAAG4B,OAAQ,GAAnC,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,sBAAKhG,UAAU,qCAAf,UACE,qBAAKA,UAAU,4BAAf,SACE,sBAAMA,UAAU,oBAAhB,SACE,mBAAGA,UAAU,oBAGjB,oBAAIA,UAAU,oDAAd,yBAEF,eAACiG,EAAA,EAAD,CAAMC,SAnBG,SAACP,GACpBA,EAAEQ,iBACFS,EAAO,CAAEhF,OAAMkC,QAAOuB,cAiBZ,UACE,eAACe,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,OAAX,kBACA,cAACC,EAAA,EAAD,CAAOlF,KAAK,OAAOwE,MAAOjE,EAAMoC,GAAG,OAAOwC,YAAY,OAAOe,QAAQ,oBAAoBC,MAAM,6BAA6Bf,SAAUf,EAAc+B,UAAQ,OAE9J,eAACrB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,QAAX,mBACA,cAACC,EAAA,EAAD,CAAOlF,KAAK,QAAQwE,MAAO/B,EAAOE,GAAG,QAAQwC,YAAY,QAAQC,SAAUf,OAE7E,eAACU,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,sBACA,cAACC,EAAA,EAAD,CAAOlF,KAAK,WAAWwE,MAAOR,EAAUrB,GAAG,WAAWwC,YAAY,WAAWe,QAAQ,2BAA2BC,MAAM,+FAA+Ff,SAAUf,EAAc+B,UAAQ,OAEvP,cAACxD,EAAA,EAAD,CAAQ5B,MAAM,UAAU6B,KAAK,KAAKwC,OAAK,EAAvC,yBAEDzB,GAAa,cAAC0B,EAAA,EAAD,CAAO3G,UAAU,OAAOqC,MAAM,SAA9B,SACV4C,kB,4FCpCHyC,GAjBK,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,aAEnC,OACE,8BACE,eAACC,EAAA,EAAD,CAAO5F,OAAQyF,EAAOC,OAAQA,EAA9B,UACE,cAACG,GAAA,EAAD,UACE,oBAAI/H,UAAU,cAAd,6CAEF,eAACgI,GAAA,EAAD,WACE,cAAC/D,EAAA,EAAD,CAAQ5B,MAAM,SAASN,QAAS8F,EAAhC,oBAA8D,IAC9D,cAAC5D,EAAA,EAAD,CAAQ5B,MAAM,YAAYN,QAAS6F,EAAnC,6BC+FKzD,eACbnD,aAVsB,SAACgB,EAAOiG,GAC9B,IAAMvD,EAAM1C,EAAMlB,UAAUsD,QAC5B,MAAM,CACJJ,GAAIiE,EAASC,MAAMC,OAAOnE,GAC1BjD,KAAMiB,EAAM5B,SAASW,KACrB4C,OAAQe,EAAIzB,QAAUyB,EAAIzB,QAAQ,GAAK,SAZhB,SAAChC,GAC1B,MAAM,CACJmH,cAAe,SAACpE,EAAID,GAAL,OAAiB9C,EC1EP,SAAC+C,EAAIqE,GAChC,OAAO,SAACpH,EAAUE,GAChBL,EAAU0D,WAAW,WAClBE,IAAI,IAAMV,GACVsE,OAAO,CAACvE,QAASsE,IACjBjH,MAAK,WACJH,EAAS,CAACI,KAAM,sBAEjBiE,OAAM,SAASiD,GACdtH,EAAS,CAACI,KAAM,uBAAwBkE,IAAKgD,EAAMnB,cDiEdgB,CAAcpE,EAAID,KAC3DyE,aAAc,SAACxE,GAAD,OAAQ/C,EC7DE,SAAC+C,GAC3B,OAAM,SAAC/C,EAAUE,GACfL,EAAU0D,WAAW,WAClBE,IAAI,IAAMV,GAAIyE,SACdrH,MAAK,WACNH,EAAS,CAACI,KAAM,qBACfiE,OAAM,SAASiD,GAChBtH,EAAS,CAACI,KAAM,sBAAuBkE,IAAKgD,EAAMnB,cDsDrBoB,CAAaxE,SAe9CM,4BAAiB,SAAAC,GAAK,MAAI,CACxB,CACEC,WAAY,UACZE,IAAKH,EAAMP,QALFG,EAnGM,SAAC,GAAqD,IAAnDR,EAAkD,EAAlDA,OAAQ+E,EAA0C,EAA1CA,QAASN,EAAiC,EAAjCA,cAAeI,EAAkB,EAAlBA,aAAkB,EAE1CvG,mBAAS,IAFiC,mBAEjE8B,EAFiE,KAExD4E,EAFwD,OAG9C1G,oBAAS,GAHqC,mBAGjE0F,EAHiE,KAG1DiB,EAH0D,KAKlEhB,EAAS,WACbgB,GAAUjB,IAeZ,OACGhE,EAAU,eAAClB,EAAA,EAAD,WACT,cAACU,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAG,KAAKrD,UAAU,oDAAvB,UACE,8BACE,eAAC,IAAD,CAAS6B,OAAK,EAAC1B,GAAG,IAAIH,UAAU,yCAAhC,UACE,mBAAGA,UAAU,kCACb,mBAAGA,UAAU,wBAAb,oCAGJ,eAAC6I,EAAA,EAAD,WACE,cAAC5E,EAAA,EAAD,CAAQ5B,MAAM,YAAYN,QAAS,kBAAM2G,EAAQI,KAAR,gBAAsBnF,EAAOK,MAAtE,kBACA,cAACC,EAAA,EAAD,CAAQ5B,MAAM,SAASN,QAAS6F,EAAhC,oBACA,cAAC,GAAD,CAAaD,MAAOA,EAAOC,OAAQA,EAAQC,aAzBhC,WACnBD,IACAY,EAAa7E,EAAOK,IACpB0E,EAAQI,KAAK,gBA0BX,cAAC3F,EAAA,EAAD,CAAKnD,UAAU,OAAf,SACE,cAACoD,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,eAAC0C,EAAA,EAAD,WACE,cAACgD,EAAA,EAAD,UACE,qBAAI/I,UAAU,sDAAd,UACE,+BAAO2D,EAAOC,YADhB,IACkC,+BAAOD,EAAOE,gBAGlD,eAACmC,EAAA,EAAD,WACE,sBAAKhG,UAAU,2CAAf,UACE,qBAAIA,UAAU,wBAAd,wBAAiD,sBAAMA,UAAU,qBAAhB,SAAsC2D,EAAOK,QAC9F,sBAAKhE,UAAU,SAAf,UACE,qBAAIA,UAAU,wBAAd,sBAA+C,uBAAMA,UAAW,kCAAjB,cAAsD2D,EAAOI,cAC5G,sBAAM/D,UAAU,oBAAoBgE,GAAG,UAAvC,SACE,mBAAGhE,UAAU,8BAInB,cAACgJ,EAAA,EAAD,CAAsBC,QAAQ,WAAWjJ,UAAU,WAAnD,SACE,cAACiG,EAAA,EAAD,CAAMjG,UAAU,mBAAmBkG,SA1C5B,SAACP,GACpBA,EAAEQ,iBACFiC,EAAczE,EAAOK,GAAID,GACzB4E,EAAW,KAuCC,SACE,eAACO,EAAA,EAAD,WACE,cAAC3C,EAAA,EAAD,CAAOlF,KAAK,OAAO2C,GAAG,UAAUwC,YAAY,kBAAkBX,MAAO9B,EAASwD,QAAQ,kBAAcC,MAAM,yCAAyCf,SAAU,SAACd,GAAD,OAAOgD,EAAWhD,EAAEC,OAAOC,QAAQ4B,UAAQ,IACxM,cAAC0B,EAAA,EAAD,CAAiBC,UAAU,SAA3B,SACE,cAACnF,EAAA,EAAD,CAAQoF,SAAO,EAAChH,MAAM,YAAtB,6BAKR,eAACiH,EAAA,EAAD,CAAWtJ,UAAU,OAArB,UACE,cAACuJ,EAAA,EAAD,UACE,oBAAGvJ,UAAU,wBAAb,4BAAoD,sBAAMA,UAAU,sBAAhB,SAAwC2D,EAAOG,aAErG,cAACyF,EAAA,EAAD,UACE,oBAAGvJ,UAAU,wBAAb,6BAAqD,sBAAMA,UAAU,sBAAhB,SAAwC2D,EAAO6F,8BAQhH,2B,SExDSC,GA7BI,SAAC,GAA2G,IAAD,IAAzG7F,iBAAyG,MAA/F,GAA+F,MAA3FC,gBAA2F,MAAlF,GAAkF,MAA9EC,aAA8E,MAAxE,GAAwE,MAApE0F,cAAoE,MAA7D,GAA6D,EAAzDzF,EAAyD,EAAzDA,QAAS2B,EAAgD,EAAhDA,aAAcgE,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,eAExG,OACE,eAAC1D,EAAA,EAAD,CAAMC,SAAUwD,EAAhB,UACE,eAACtD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,OAAX,wBACA,cAACC,EAAA,EAAD,CAAOlF,KAAK,OAAOwE,MAAOjC,EAAWI,GAAG,YAAYwC,YAAY,aAAae,QAAQ,oBAAoBC,MAAM,6BAA6Bf,SAAUf,EAAc+B,UAAQ,OAE9K,eAACrB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,OAAX,uBACA,cAACC,EAAA,EAAD,CAAOlF,KAAK,OAAOwE,MAAOhC,EAAUG,GAAG,WAAWwC,YAAY,YAAYe,QAAQ,oBAAoBC,MAAM,6BAA6Bf,SAAUf,EAAc+B,UAAQ,OAE3K,eAACrB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,QAAX,mBACA,cAACC,EAAA,EAAD,CAAOlF,KAAK,QAAQwE,MAAO/B,EAAOE,GAAG,QAAQwC,YAAY,QAAQC,SAAUf,OAE7E,eAACU,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,OAAX,2BACA,cAACC,EAAA,EAAD,CAAOlF,KAAK,OAAOwE,MAAO2D,EAAQxF,GAAG,SAASwC,YAAY,gBAAgBe,QAAQ,YAAYC,MAAM,qCAAqCf,SAAUf,EAAc+B,UAAQ,OAE3K,eAACrB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,OAAX,qBACA,cAACC,EAAA,EAAD,CAAOlF,KAAK,OAAOwE,MAAoB,SAAZ9B,EAAsBA,EAAU,GAAI6F,SAAUD,EAAgB3F,GAAG,UAAUwC,YAAY,OAAOe,QAAQ,kBAAcC,MAAM,yCAAyCf,SAAUf,OAE1M,cAACzB,EAAA,EAAD,CAAQ5B,MAAM,UAAUqE,OAAK,EAA7B,wBClBAmD,G,4MAEJ7H,MAAQ,CACN4B,UAAW,GACXC,SAAU,GACVC,MAAO,GACP0F,OAAQ,GACRzF,QAAS,Q,EAGX2B,aAAe,SAACC,GACd,EAAKmE,SAAL,gBACGnE,EAAEC,OAAO5B,GAAK2B,EAAEC,OAAOC,S,EAI5B6D,aAAe,SAAC/D,GACdA,EAAEQ,iBACF,EAAK5B,MAAMwF,UAAU,EAAK/H,OAC1B,EAAKuC,MAAMmE,QAAQI,KAAK,M,4CAG1B,WAAU,IACDzE,EAAW2F,KAAKzF,MAAhBF,QACP,OACE,8BACE,eAAC5B,EAAA,EAAD,WACE,cAACU,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,8BACE,eAAC,IAAD,CAASxB,OAAK,EAAC1B,GAAG,IAAIH,UAAU,yCAAhC,UACE,mBAAGA,UAAU,kCACb,mBAAGA,UAAU,wBAAb,wCAKR,cAACmD,EAAA,EAAD,CAAKnD,UAAU,OAAf,SACE,cAACoD,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,eAAC0C,EAAA,EAAD,WACE,cAACgD,EAAA,EAAD,4BACA,cAAC/C,EAAA,EAAD,UACInD,mBAASwB,KAAa4F,kBAAQ5F,IAAa,cAAC,GAAD,CAC3CT,UAAWoG,KAAKhI,MAAM4B,UACtBC,SAAUmG,KAAKhI,MAAM6B,SACrBC,MAAOkG,KAAKhI,MAAM8B,MAClB0F,OAAQQ,KAAKhI,MAAMwH,OACnBzF,QAASiG,KAAKhI,MAAM+B,QACpB2B,aAAcsE,KAAKtE,aACnBgE,aAAcM,KAAKN,aACnBC,eAAgBtF,EAAQ6C,yC,GAlDpBgD,aA2ET/F,eACbnD,aARsB,SAAC,GAAmD,IAArCD,EAAoC,EAAhDX,SAAYW,KAAqBqD,EAAe,EAA5BtD,UAAasD,QAC1D,MAAM,CACJC,QAASD,EAAQC,QAAUD,EAAQC,QAAQ,GAAI,KAC/CtD,WATuB,SAAAE,GACzB,MAAM,CACJ8I,UAAW,SAACI,GAAD,OAAkBlJ,EFvER,SAACkJ,GACxB,OAAO,SAAClJ,EAAUE,GAEhB,IAAMiJ,EAAWjJ,IAAWf,SAASW,KAAK+B,IAC1ChC,EAAU0D,WAAW,WAAW6F,IAAhC,2BACKF,GADL,IAEEC,cACChJ,MAAK,WACNH,EAAS,CACPI,KAAM,aACN8I,oBAED7E,OAAM,SAACC,GACRtE,EAAS,CAACI,KAAM,mBAAoBkE,IAAKA,EAAI6B,cE0DT2C,CAAUI,SAalD7F,4BAAiB,SAAAC,GAAK,MAAI,CACxB,CACEC,WAAY,UACZE,IAAKH,EAAMxD,KAAK+B,SALPqB,CAQb0F,IClFIS,G,4MAEJtI,MAAQ,CACN4B,UAAW,GACXC,SAAU,GACVC,MAAO,GACP0F,OAAQ,GACRzF,QAAS,I,EAUX2B,aAAe,SAACC,GACd,EAAKmE,SAAL,gBACGnE,EAAEC,OAAO5B,GAAK2B,EAAEC,OAAOC,S,EAI5B6D,aAAe,SAAC/D,GACdA,EAAEQ,iBACF,EAAK5B,MAAMgG,mBAAmB,EAAKhG,MAAMZ,OAAOK,GAAI,EAAKhC,OACzD,EAAKuC,MAAMmE,QAAQI,KAAK,M,+DAhB1B,SAA0B0B,GAAW,IAC3B7G,EAAW6G,EAAX7G,OACLA,GACDqG,KAAKF,SAAL,eAAkBnG,M,oBAgBtB,WAAU,IAAD,EACmBqG,KAAKzF,MAAxBZ,EADA,EACAA,OAAQU,EADR,EACQA,QACf,OACGV,EAAU,8BACT,eAAClB,EAAA,EAAD,WACE,cAACU,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,8BACE,eAAC,IAAD,CAASxB,OAAK,EAAC1B,GAAG,IAAIH,UAAU,yCAAhC,UACE,mBAAGA,UAAU,kCACb,mBAAGA,UAAU,wBAAb,wCAKR,cAACmD,EAAA,EAAD,CAAKnD,UAAU,OAAf,SACE,cAACoD,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,eAAC0C,EAAA,EAAD,WACE,cAACgD,EAAA,EAAD,4BACA,cAAC/C,EAAA,EAAD,UACInD,mBAASwB,KAAa4F,kBAAQ5F,IAAa,cAAC,GAAD,CAC3CT,UAAWoG,KAAKhI,MAAM4B,UACtBC,SAAUmG,KAAKhI,MAAM6B,SACrBC,MAAOkG,KAAKhI,MAAM8B,MAClB0F,OAAQQ,KAAKhI,MAAMwH,OACnBzF,QAASiG,KAAKhI,MAAM+B,QACpB2B,aAAcsE,KAAKtE,aACnBgE,aAAcM,KAAKN,aACnBC,eAAgBtF,EAAQ8C,sCAO7B,4B,GAhEU+C,aAqFV/F,eACbnD,aAXsB,SAACgB,EAAOiG,GAC9B,IAAMvD,EAAM1C,EAAMlB,UAAUsD,QAC5B,MAAM,CACJJ,GAAIiE,EAASC,MAAMC,OAAOnE,GAC1BjD,KAAMiB,EAAM5B,SAASW,KACrB4C,OAAQe,EAAIzB,QAAUyB,EAAIzB,QAAQ,GAAK,KACvCoB,QAASK,EAAIL,QAAUK,EAAIL,QAAQ,GAAI,SAZhB,SAACpD,GAC1B,MAAM,CACJsJ,mBAAoB,SAACvG,EAAImG,GAAL,OAAsBlJ,EHnCZ,SAAC+C,EAAImG,GACrC,OAAM,SAAClJ,EAAUE,GACf,IAAMiJ,EAAWjJ,IAAWf,SAASW,KAAK+B,IAC1ChC,EAAU0D,WAAW,WAClBE,IAAI,IAAMV,GAAIiD,IADjB,2BAC0BkD,GAD1B,IACwCC,cACrChJ,MAAK,WACJH,EAAS,CAACI,KAAM,4BACfiE,OAAM,SAASiD,GAClBtH,EAAS,CAACI,KAAM,6BAA8BkE,IAAKgD,EAAMnB,cG2BRmD,CAAmBvG,EAAImG,SAgB5E7F,4BAAiB,SAAAC,GAAK,MAAI,CACxB,CACEC,WAAY,UACZE,IAAKH,EAAMP,IAEb,CACEQ,WAAY,UACZE,IAAKH,EAAMxD,KAAK+B,SATPqB,CAYbmG,I,UCrBanG,eACbnD,aATsB,SAACgB,EAAOiG,GAC9B,IAAMvD,EAAM1C,EAAMlB,UAAUsD,QAC5B,MAAM,CACJJ,GAAIhC,EAAM5B,SAASW,KAAK+B,IACxBuB,QAASK,EAAIL,QAAUK,EAAIL,QAAQ,GAAK,SAVjB,SAACpD,GAC1B,MAAM,CACJwJ,cAAe,SAACC,GAAD,OAAoBzJ,ECxEV,SAACyJ,GAC5B,OAAO,SAACzJ,EAAUE,GAChB,IAAMiJ,EAAWjJ,IAAWf,SAASW,KAAK+B,IAC1ChC,EAAU0D,WAAW,WAAWE,IAAI0F,GAAUnD,IAAIyD,GAAgBtJ,MAAK,WACrEH,EAAS,CACPI,KAAM,iBACNsJ,KAAMD,OAEPpF,OAAM,SAACC,GACRtE,EAAS,CAACI,KAAM,uBAAwBkE,IAAKA,EAAI6B,cD+DPqD,CAAcC,SAc5DpG,4BAAiB,SAAAC,GAAK,MAAI,CACxB,CACEC,WAAY,UACZE,IAAKH,EAAMP,QALFG,EA9EC,SAAC,GAA8B,IAA7BE,EAA4B,EAA5BA,QAASoG,EAAmB,EAAnBA,cAAmB,EAEAxI,qBAFA,mBAErC+C,EAFqC,KAErB4F,EAFqB,OAGY3I,qBAHZ,mBAGrCiF,EAHqC,KAGf2D,EAHe,OAIc5I,qBAJd,mBAIrCkF,EAJqC,KAId2D,EAJc,OAKR7I,oBAAS,GALD,mBAKrC8I,EALqC,KAKzBC,EALyB,KAO5CC,qBAAU,WACRL,IAAkBvG,GAAUA,EAAQW,gBACpC6F,IAAwBxG,GAAUA,EAAQ6C,sBAC1C4D,IAAyBzG,GAAUA,EAAQ8C,yBAC3C,CAAC9C,IAEH,IAAMiE,EAAS,SAAC3C,GACK,mBAAhBA,EAAEC,OAAO5B,GACV4G,GAAmB5F,GACI,yBAAhBW,EAAEC,OAAO5B,GAChB6G,GAAyB3D,GAEzB4D,GAA0B3D,GAE5B6D,GAAc,IAShB,OANAC,qBAAU,WACLF,IACDN,EAAc,CAACzF,iBAAgBkC,uBAAsBC,0BACrD6D,GAAc,MAEhB,CAACD,IAED,eAACtI,EAAA,EAAD,WACE,cAACU,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,8BACE,eAAC,IAAD,CAASxB,OAAK,EAAC1B,GAAG,IAAIH,UAAU,yCAAhC,UACE,mBAAGA,UAAU,kCACb,mBAAGA,UAAU,wBAAb,wCAKR,cAACmD,EAAA,EAAD,CAAKnD,UAAU,OAAf,SACE,cAACoD,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,eAAC0C,EAAA,EAAD,WACE,cAACgD,EAAA,EAAD,4BACA,eAAC/C,EAAA,EAAD,WACE,8BACE,cAACkF,GAAA,EAAD,CAAa7J,KAAK,WAAW8J,QAASnG,EAAgBhB,GAAG,iBAAiBoH,MAAM,mBAAmBC,QAAM,EAAC5E,SAAU6B,MAEtH,8BACE,cAAC4C,GAAA,EAAD,CAAa7J,KAAK,WAAW8J,QAASjE,EAAsBlD,GAAG,uBAAuBoH,MAAM,yBAAyBC,QAAM,EAAC5E,SAAU6B,MAExI,8BACE,cAAC4C,GAAA,EAAD,CAAa7J,KAAK,WAAW8J,QAAShE,EAAuBnD,GAAG,wBAAwBoH,MAAM,0BAA0BC,QAAM,EAAC5E,SAAU6B,sB,UEnC1ItH,gBANS,SAACgB,GACvB,MAAM,CACJjB,KAAMiB,EAAM5B,SAASW,QAIVC,EAtBQ,SAAC,GAA2C,IAA/BkJ,EAA8B,EAAzCnH,UAAsBhC,EAAmB,EAAnBA,KAASuK,EAAU,qCAChE,OACE,cAAC,IAAD,2BAAWA,GAAX,IAAiBC,OACf,SAAChH,GACC,GAAG1B,mBAAS9B,GACV,OAAGA,EAAK+B,IACC,cAACoH,EAAD,eAAe3F,IAEf,cAAC,IAAD,CAAUpE,GAAG,kBCcjBa,gBANS,SAACgB,GACvB,MAAM,CACJjB,KAAMiB,EAAM5B,SAASW,QAIVC,EAtBW,SAAC,GAA2C,IAA/BkJ,EAA8B,EAAzCnH,UAAsBhC,EAAmB,EAAnBA,KAASuK,EAAU,qCACnE,OACE,cAAC,IAAD,2BAAWA,GAAX,IAAiBC,OACf,SAAChH,GACC,GAAG1B,mBAAS9B,GACV,OAAIA,EAAK+B,IAGA,cAAC,IAAD,CAAU3C,GAAG,MAFb,cAAC+J,EAAD,eAAe3F,WCwBnBiH,GAtBA,WACb,OACE,cAAC,IAAD,UACE,gCACE,cAAC,EAAD,IACA,qBAAKxL,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,cAAC,GAAD,CAAmByL,KAAK,SAAS1I,UAAW2I,IAC5C,cAAC,GAAD,CAAmBD,KAAK,YAAY1I,UAAW4I,IAC/C,cAAC,GAAD,CAAgB9J,OAAK,EAAC4J,KAAK,IAAI1I,UAAW6I,IAC1C,cAAC,GAAD,CAAgBH,KAAK,cAAc1I,UAAW8I,KAC9C,cAAC,GAAD,CAAgBJ,KAAK,OAAO1I,UAAW8G,KACvC,cAAC,GAAD,CAAgB4B,KAAK,WAAW1I,UAAW+I,KAC3C,cAAC,GAAD,CAAgBL,KAAK,YAAY1I,UAAWuH,KAC5C,cAAC,GAAD,CAAgBmB,KAAK,IAAIF,OAAU,kBAAM,cAAC,IAAD,CAAUpL,GAAG,oBCdnD4L,G,4JATb,WACE,OACE,8BACE,cAAC,GAAD,U,GAJU7B,aCSZ8B,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlE,MACvB,2DAsCN,SAASmE,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTlL,MAAK,SAAAuL,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7K,QACfwK,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,iHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,WAO5BrH,OAAM,SAAAiD,GACL0E,QAAQ1E,MAAM,4CAA6CA,M,cChG3D8E,GAAY,CAChBpI,UAAW,MAkCEqI,GA/BK,WAAgC,IAA/BtL,EAA8B,uDAAtBqL,GAAWE,EAAW,uCACjD,OAAOA,EAAOlM,MACZ,IAAK,cACH,kCACKW,GADL,IAEEiD,UAAW,iBAEf,IAAK,gBACH,OAAO,2BACFjD,GADL,IAEEiD,UAAW,OAEf,IAAK,kBACH,sBACKjD,GAEP,IAAK,iBACH,kCACKA,GADL,IAEEiD,UAAW,OAEf,IAAK,eACH,kCACKjD,GADL,IAEEiD,UAAWsI,EAAOhI,MAEtB,QACE,OAAOvD,IC/BPqL,GAAY,CAChB9H,IAAM,MAkDOiI,GA/CO,WAAgC,IAA/BxL,EAA8B,uDAAtBqL,GAAWE,EAAW,uCACnD,OAAOA,EAAOlM,MACZ,IAAK,aACH,OAAO,2BACFW,GADL,IAEEuD,IAAK,OAET,IAAK,mBACH,OAAO,2BACFvD,GADL,IAEEuD,IAAKgI,EAAOhI,MAEhB,IAAK,iBACH,OAAO,2BACFvD,GADL,IAEEuD,IAAK,OAET,IAAK,uBACH,OAAO,2BACFvD,GADL,IAEEuD,IAAKgI,EAAOhI,MAEhB,IAAK,gBACH,OAAO,2BACFvD,GADL,IAEEuD,IAAK,OAET,IAAK,sBACH,OAAO,2BACFvD,GADL,IAEEuD,IAAKgI,EAAOhI,MAEhB,IAAK,uBACH,OAAO,2BACFvD,GADL,IAEEuD,IAAK,OAET,IAAK,6BACH,OAAO,2BACFvD,GADL,IAEEuD,IAAKgI,EAAOhI,MAEhB,QACE,OAAOvD,IC/CPqL,GAAY,CAChB9H,IAAK,MAoBQkI,GAjBQ,WAAgC,IAA/BzL,EAA8B,uDAAtBqL,GAAWE,EAAW,uCACpD,OAAOA,EAAOlM,MACZ,IAAK,iBACH,OAAO,2BACFW,GADL,IAEEuD,IAAK,OAET,IAAK,uBACH,OAAO,2BACFvD,GADL,IAEEuD,IAAKgI,EAAOhI,MAEhB,QACE,OAAOvD,ICFE0L,GARKC,YAAgB,CAClCtJ,QAASoJ,GACT1M,KAAMuM,GACN3J,OAAQ6J,GACR1M,UAAW8M,oBACXxN,SAAUyN,oB,UCQNC,GAAQC,YAAYL,GAAavJ,YACrC6J,YAAgBC,QAKZC,GAAW,CACf9N,aACAmM,OAbgB,CAChB4B,YAAa,QACbC,wBAAwB,GAYxBnN,SAAU6M,GAAM7M,SAChBoN,oDAGFC,IAAS/C,OAAO,cAAC,IAAD,CAAUuC,MAAOA,GAAjB,SAAwB,cAAC,6BAAD,2BAAgCI,IAAhC,aAA0C,cAAC,GAAD,SAAiDK,SAASC,eAAe,SLXpJ,SAAkBjC,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIiC,IAAIlO,iCAAwB2L,OAAOC,SAASuC,MACpDC,SAAWzC,OAAOC,SAASwC,OAIvC,OAGFzC,OAAO0C,iBAAiB,QAAQ,WAC9B,IAAMtC,EAAK,UAAM/L,iCAAN,sBAEPyL,KAgEV,SAAiCM,EAAOC,GAEtCsC,MAAMvC,GACHlL,MAAK,SAAA0N,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C3C,UAAUC,cAAc2C,MAAMhO,MAAK,SAAAuL,GACjCA,EAAa0C,aAAajO,MAAK,WAC7B8K,OAAOC,SAASmD,eAKpBjD,GAAgBC,EAAOC,MAG1BjH,OAAM,WACL2H,QAAQC,IACN,oEArFAqC,CAAwBjD,EAAOC,GAI/BC,UAAUC,cAAc2C,MAAMhO,MAAK,WACjC6L,QAAQC,IACN,iHAMJb,GAAgBC,EAAOC,OKX/BE,K","file":"static/js/main.6913888c.chunk.js","sourcesContent":["import React from 'react';\nimport {Nav, NavItem} from 'reactstrap';\nimport {NavLink} from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n      <Nav className=\"ml-auto\" navbar>\n        <NavItem className=\"mr-2\">\n          <NavLink to='/login'>Login</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink to='/register'>Register</NavLink>\n        </NavItem>\n      </Nav>\n  );\n};\n\nexport default SignedOutLinks;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Initialize Firebase\nlet config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appID: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nfirebase.initializeApp(config);\n\nconst firestore = firebase.firestore();\nconst auth = firebase.auth();\n\nexport { firebase, firestore, auth };\n","import React from \"react\";\nimport { Nav, NavItem } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = ({ signOut, profile }) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        width: \"50%\",\n        listStyle: \"none\",\n      }}\n    >\n      <NavItem>{profile.name}</NavItem>\n      <NavItem>\n        <NavLink exact={true} to=\"/\">\n          Dashboard\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink to=\"/setting\">Setting</NavLink>\n      </NavItem>\n      <NavItem>\n        <div style={{ cursor: \"pointer\" }} onClick={signOut}>\n          Logout\n        </div>\n      </NavItem>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut()),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","import {auth} from \"../../config/fbConfig\";\nimport {firestore} from \"../../config/fbConfig\";\n\nexport const signIn = (credentials) => {\n  return (dispatch, getState) => {\n    auth.signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({type: 'LOGIN_SUCCESS'})\n    }).catch((err) => {\n      dispatch({type: 'LOGIN_ERROR', err})\n    });\n  }\n};\n\nexport const signOut = () => {\n  return (dispatch, getState) => {\n    auth.signOut().then(() => {\n      dispatch({type: 'SIGNOUT_SUCCESS'})\n    })\n  }\n};\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState) => {\n    auth.createUserWithEmailAndPassword(\n      newUser.email, newUser.password\n    ).then((res) => {\n      firestore.collection('users').doc(res.user.uid)\n        .set({\n          name: newUser.name\n        });\n      return res.user.uid;\n    }).then((uid) => {\n      firestore.collection('setting').doc(uid).set({\n        allowNewClient: true,\n        disabledBalanceOnAdd: false,\n        disabledBalanceOnEdit: false\n      }).then(() => {\n        dispatch({\n          type: 'SIGNUP_SUCCESS'\n        })\n      })\n    }).catch((err) => {\n      dispatch({type: 'SIGNUP_ERROR', err: err.message});\n    })\n  }\n};","import React, { useState} from 'react';\nimport {Collapse, Navbar, NavbarToggler, NavbarBrand, Container} from 'reactstrap';\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport { connect } from 'react-redux';\nimport { isLoaded } from 'react-redux-firebase';\n\nconst Header = ({ auth, profile }) => {\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const component = () => {\n    if (isLoaded(auth)) {\n      if(auth.uid){\n        return <SignedInLinks profile={profile}/>\n      }else{\n        return <SignedOutLinks/>\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Navbar color=\"primary\" light className=\"text-white\" fixed=\"top\" expand=\"md\">\n        <Container>\n          <NavbarBrand>Client Panel</NavbarBrand>\n          <NavbarToggler onClick={toggle} />\n          <Collapse isOpen={isOpen} navbar>\n            {component()}\n          </Collapse>\n        </Container>\n      </Navbar>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return{\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n};\n\nexport default connect(mapStateToProps)(Header);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {Row, Col, Button, Table} from 'reactstrap';\n\nconst ClientList = ({clients}) => {\n  return (\n    (clients.length > 0) ? <Row>\n      <Col sm=\"12\" md=\"10\" className=\"mt-2\">\n        <Table striped responsive>\n          <thead>\n          <tr>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Balance</th>\n            <th/>\n          </tr>\n          </thead>\n          <tbody>\n          {(clients) && clients.map(client => (<tr key={client.id}>\n            <td className=\"text-capitalize\"><span>{client.firstName}</span> <span>{client.lastName}</span></td>\n            <td>{client.email}</td>\n            <td>${client.balance}</td>\n            <td>\n              <NavLink to={`/client/${client.id}`}>\n                <Button color=\"secondary\" size=\"sm\" className=\"px-2 d-flex align-items-center\"><i\n                  className=\"fas fa-arrow-circle-right mr-1\"/>Detail</Button>\n              </NavLink>\n            </td>\n          </tr>))\n          }\n          </tbody>\n        </Table>\n      </Col>\n    </Row> : <h5 className=\"mt-3\"> No Clients </h5>\n  );\n};\n\nexport default ClientList;\n","import React from 'react';\nimport {Container, Row, Col, Button} from 'reactstrap';\nimport {NavLink} from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { firestoreConnect, isLoaded } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport ClientList from \"../client/ClientList\";\n\nconst Dashboard = ({ clients, setting }) => {\n\n  const updateTotalBalance = (clients) => {\n    let totalBalance = 0;\n    clients.forEach((client) => {\n      totalBalance += parseFloat(client.balance)\n    });\n    return totalBalance.toFixed(2);\n  };\n\n\n  return (\n    <Container>\n      <Row>\n        <Col sm=\"12\" md=\"10\" className=\"d-flex justify-content-between align-items-baseline flex-wrap\">\n          <div className=\"d-flex\">\n            <span className=\"d-flex align-items-center mr-2\">\n              <i className=\"fas fa-users\"/>\n            </span>\n            <h2 className=\"mb-0\">Clients</h2>\n          </div>\n          <div className=\"d-flex my-1\">\n            <h5 className=\"mb-0\">Total Owed</h5>\n            <h5 className=\"mb-0 ml-1 text-primary\">${(clients) ? updateTotalBalance(clients) : 0.00}</h5>\n          </div>\n        </Col>\n        <Col sm=\"12\" md=\"2\" className=\"d-md-flex justify-content-center align-items-center\">\n          {\n            isLoaded(setting) && <div>{(setting && setting.allowNewClient) && <NavLink to='/add'>\n              <Button color=\"success\" size=\"sm\" className=\"px-3\">+ New</Button>\n            </NavLink>}</div>\n          }\n        </Col>\n      </Row>\n      { isLoaded(clients) && <ClientList clients={clients}/> }\n    </Container>\n  );\n};\n\nconst mapStateToProps = ({ firebase: { auth }, firestore: { ordered }}) => {\n  return{\n    clients: ordered.clients,\n    setting: ordered.setting ? ordered.setting[0]: null,\n    auth\n  }\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect(props => [\n    {\n      collection: 'clients',\n      where: [['authorId', '==', props.auth.uid]],\n    },\n    {\n      collection: 'setting',\n      doc: props.auth.uid\n    }\n  ])\n)(Dashboard);\n","import React, {useState} from 'react';\nimport { connect } from 'react-redux';\nimport { signIn} from \"../../store/actions/authActions\";\nimport {Container, Row, Col, Form, FormGroup, Label, Input, Card, CardBody, Button, Alert} from 'reactstrap';\n\nconst SignIn = ({authError, signIn}) => {\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = (e) => {\n    if(e.target.id === 'email'){\n      setEmail(e.target.value)\n    }else{\n      setPassword(e.target.value)\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    signIn({email, password});\n    // this.props.signUp(this.state);\n  };\n\n  return (\n    <Container className=\"mt-5\">\n      <Row>\n        <Col sm=\"12\" md={{size: 6, offset: 3}}>\n          <Card>\n            <CardBody>\n              <div className=\"d-flex justify-content-center mb-2\">\n                <div className=\"d-flex align-items-center\">\n                  <span className=\"text-primary mr-2\">\n                    <i className=\"fas fa-lock\"/>\n                  </span>\n                </div>\n                <h2 className=\"text-uppercase text-primary font-weight-bold mb-0\">Login</h2>\n              </div>\n              <Form onSubmit={handleSubmit}>\n                <FormGroup>\n                  <Label for=\"exampleEmail\">Email</Label>\n                  <Input type=\"email\" value={email} id=\"email\" placeholder=\"Email\" onChange={handleChange}/>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"examplePassword\">Password</Label>\n                  <Input type=\"password\" value={password} id=\"password\" placeholder=\"Password\" onChange={handleChange}/>\n                </FormGroup>\n                <Button color=\"primary\" block>Login</Button>\n              </Form>\n              {authError && <Alert className=\"mt-3\" color=\"danger\">\n                { authError }\n              </Alert>}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  return{\n    authError: state.auth.authError\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({signIn: (credentials) => dispatch(signIn(credentials))});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, {useState} from 'react';\nimport {Container, Row, Col, Form, FormGroup, Label, Input, Card, CardBody, Button, Alert} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { signUp } from \"../../store/actions/authActions\";\n\nconst Register = ({authError, signUp}) => {\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = (e) => {\n    if(e.target.id === 'name'){\n      setName(e.target.value)\n    }else if(e.target.id === 'email'){\n      setEmail(e.target.value.trim())\n    }else{\n      setPassword(e.target.value.trim())\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    signUp({ name, email, password });\n  };\n\n  return (\n    <Container className=\"mt-5\">\n      <Row>\n        <Col sm=\"12\" md={{size: 6, offset: 3}}>\n          <Card>\n            <CardBody>\n              <div className=\"d-flex justify-content-center mb-2\">\n                <div className=\"d-flex align-items-center\">\n                  <span className=\"text-primary mr-2\">\n                    <i className=\"fas fa-lock\"/>\n                  </span>\n                </div>\n                <h2 className=\"text-uppercase text-primary font-weight-bold mb-0\">Register</h2>\n              </div>\n              <Form onSubmit={handleSubmit}>\n                <FormGroup>\n                  <Label for=\"name\">Name</Label>\n                  <Input type=\"text\" value={name} id=\"name\" placeholder=\"Name\" pattern=\"[A-Za-z0-9_ ]{3,}\" title=\"Minimum three letter name.\" onChange={handleChange} required/>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"email\">Email</Label>\n                  <Input type=\"email\" value={email} id=\"email\" placeholder=\"Email\" onChange={handleChange}/>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"password\">Password</Label>\n                  <Input type=\"password\" value={password} id=\"password\" placeholder=\"Password\" pattern=\"[a-zA-Z0-9~!@#$%^&*]{6,}\" title=\"Password must be atleast 6 characters. Should contain letters, number or special characters.\" onChange={handleChange} required/>\n                </FormGroup>\n                <Button color=\"primary\" size=\"sm\" block>Register</Button>\n              </Form>\n              {authError && <Alert className=\"mt-3\" color=\"danger\">\n                { authError }\n              </Alert>}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  return{\n    authError: state.auth.authError\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    signUp: (newUser) => dispatch(signUp(newUser))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n","import React from 'react';\nimport { Button, Modal, ModalBody, ModalFooter } from 'reactstrap';\n\nconst DeleteModal = ({modal, toggle, removeClient}) => {\n\n  return (\n    <div>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalBody>\n          <h4 className=\"text-center\">Do you want to delete client?</h4>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"danger\" onClick={removeClient}>Delete</Button>{' '}\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default DeleteModal;","import React, {useState} from 'react';\nimport {Container, Row, Col, Card, CardBody, CardHeader, Button, ButtonGroup, UncontrolledCollapse, Input, InputGroupAddon, InputGroup, Form, ListGroup, ListGroupItem} from 'reactstrap';\nimport {NavLink} from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { updateBalance, deleteClient } from \"../../store/actions/clientActions\";\nimport DeleteModal from \"../layout/DeleteModal\";\n\nconst ClientDetail = ({ client, history, updateBalance, deleteClient}) => {\n\n  const [balance, setBalance] = useState('');\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => {\n    setModal(!modal)\n  };\n\n  const removeClient = () => {\n    toggle();\n    deleteClient(client.id);\n    history.push('/');\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    updateBalance(client.id, balance);\n    setBalance('');\n  };\n\n  return (\n    (client) ? <Container>\n      <Row>\n        <Col sm=\"12\" className=\"d-flex justify-content-between align-items-center\">\n          <div>\n            <NavLink exact to='/' className=\"text-primary d-flex align-items-center\">\n              <i className=\"fas fa-arrow-circle-left mr-1\"/>\n              <p className=\"font-weight-bold mb-0\">Back To Dashboard</p>\n            </NavLink>\n          </div>\n          <ButtonGroup>\n            <Button color=\"secondary\" onClick={() => history.push(`/edit/${client.id}`)}>Edit</Button>\n            <Button color=\"danger\" onClick={toggle}>Delete</Button>\n            <DeleteModal modal={modal} toggle={toggle} removeClient={removeClient}/>\n          </ButtonGroup>\n        </Col>\n      </Row>\n      <Row className=\"mt-3\">\n        <Col sm=\"12\">\n          <Card>\n            <CardHeader>\n              <h5 className=\"text-truncate font-weight-bold mb-0 text-capitalize\">\n                <span>{client.firstName}</span> <span>{client.lastName}</span>\n              </h5>\n            </CardHeader>\n            <CardBody>\n              <div className=\"d-flex flex-wrap justify-content-between\">\n                <h5 className=\"font-weight-bold mb-0\">Client ID: <span className=\"font-weight-normal\">{client.id}</span></h5>\n                <div className=\"d-flex\">\n                  <h4 className=\"font-weight-bold mb-0\">Balance: <span className={\"font-weight-normal text-primary\"}>${client.balance}</span></h4>\n                  <span className=\"ml-2 text-primary\" id=\"toggler\">\n                    <i className=\"fas fa-pencil-alt\"/>\n                  </span>\n                </div>\n              </div>\n              <UncontrolledCollapse toggler=\"#toggler\" className=\"clearfix\">\n                <Form className=\"float-right mt-3\" onSubmit={handleSubmit}>\n                  <InputGroup>\n                    <Input type=\"text\" id=\"balance\" placeholder=\"Add New Balance\" value={balance} pattern=\"^\\d+\\.\\d\\d$\" title=\"Valid balance is 10.00, 10.90 or 0.78.\" onChange={(e) => setBalance(e.target.value)} required/>\n                    <InputGroupAddon addonType=\"append\">\n                      <Button outline color=\"secondary\">Update</Button>\n                    </InputGroupAddon>\n                  </InputGroup>\n                </Form>\n              </UncontrolledCollapse>\n              <ListGroup className=\"mt-3\">\n                <ListGroupItem>\n                  <p className=\"font-weight-bold mb-0\">Contact Email: <span className=\"font-weight-lighter\">{ client.email }</span></p>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <p className=\"font-weight-bold mb-0\">Contact Number: <span className=\"font-weight-lighter\">{ client.mobile }</span></p>\n                </ListGroupItem>\n              </ListGroup>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Container> :\n      <div/>\n);\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    updateBalance: (id, balance) => dispatch(updateBalance(id, balance)),\n    deleteClient: (id) => dispatch(deleteClient(id))\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const doc = state.firestore.ordered;\n  return{\n    id: ownProps.match.params.id,\n    auth: state.firebase.auth,\n    client: doc.clients ? doc.clients[0] : null\n  }\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect(props => [\n    {\n      collection: 'clients',\n      doc: props.id\n    },\n  ])\n)(ClientDetail);\n","import {firestore} from \"../../config/fbConfig\";\n\nexport const addClient = (clientDetail) => {\n  return (dispatch, getState) => {\n    //make async call to database\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('clients').add({\n      ...clientDetail,\n      authorId\n    }).then(() => {\n      dispatch({\n        type: 'ADD_CLIENT',\n        clientDetail\n      })\n    }).catch((err) => {\n      dispatch({type: 'ADD_CLIENT_ERROR', err: err.message})\n    });\n  }\n};\n\nexport const updateBalance = (id, newBalance) => {\n  return (dispatch, getState) => {\n    firestore.collection('clients')\n      .doc('/' + id)\n      .update({balance: newBalance})\n      .then(() => {\n        dispatch({type: 'UPDATE_BALANCE'})\n      })\n      .catch(function(error) {\n        dispatch({type: 'UPDATE_BALANCE_ERROR', err: error.message})\n      })\n  }\n};\n\nexport const deleteClient = (id) => {\n  return(dispatch, getState) => {\n    firestore.collection(\"clients\")\n      .doc('/' + id).delete()\n      .then(() => {\n      dispatch({type: 'DELETE_CLIENT'})\n    }).catch(function(error) {\n      dispatch({type: 'DELETE_CLIENT_ERROR', err: error.message})\n    });\n  }\n};\n\nexport const updateClientDetail = (id, clientDetail) => {\n  return(dispatch, getState) => {\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection(\"clients\")\n      .doc('/' + id).set({ ...clientDetail, authorId })\n      .then(() => {\n        dispatch({type: 'UPDATE_CLIENT_DETAIL'});\n      }).catch(function(error) {\n      dispatch({type: 'UPDATE_CLIENT_DETAIL_ERROR', err: error.message})\n    });\n  }\n};","import React from 'react';\nimport {Form, FormGroup, Label, Input, Button} from 'reactstrap';\n\nconst ClientForm = ({firstName='', lastName='', email='', mobile='', balance, handleChange, handleSubmit, disableBalance}) => {\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormGroup>\n        <Label for=\"name\">First Name</Label>\n        <Input type=\"text\" value={firstName} id=\"firstName\" placeholder=\"First Name\" pattern=\"[A-Za-z0-9_ ]{3,}\" title=\"Minimum three letter name.\" onChange={handleChange} required/>\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"name\">Last Name</Label>\n        <Input type=\"text\" value={lastName} id=\"lastName\" placeholder=\"Last Name\" pattern=\"[A-Za-z0-9_ ]{3,}\" title=\"Minimum three letter name.\" onChange={handleChange} required/>\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"email\">Email</Label>\n        <Input type=\"email\" value={email} id=\"email\" placeholder=\"Email\" onChange={handleChange}/>\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"name\">Mobile Number</Label>\n        <Input type=\"text\" value={mobile} id=\"mobile\" placeholder=\"Mobile Number\" pattern=\"[0-9]{10}\" title=\"Mobile Number must be of 10 digit.\" onChange={handleChange} required/>\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"name\">Balance</Label>\n        <Input type=\"text\" value={(balance !== '0.00') ? balance : ''} disabled={disableBalance} id=\"balance\" placeholder=\"0.00\" pattern=\"^\\d+\\.\\d\\d$\" title=\"Valid balance is 10.00, 10.90 or 0.78.\" onChange={handleChange}/>\n      </FormGroup>\n      <Button color=\"primary\" block>Submit</Button>\n    </Form>\n  );\n};\n\nexport default ClientForm;\n","import React, {Component} from 'react';\nimport {Container, Row, Col, Card, CardBody, CardHeader} from 'reactstrap';\nimport {NavLink} from \"react-router-dom\";\nimport ClientForm from \"./ClientForm\";\nimport { connect } from 'react-redux';\nimport { firestoreConnect, isLoaded, isEmpty } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { addClient } from \"../../store/actions/clientActions\";\n\nclass AddClient extends Component {\n\n  state = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    mobile: '',\n    balance: '0.00'\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.addClient(this.state);\n    this.props.history.push('/');\n  };\n\n  render() {\n    const {setting} = this.props;\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Col sm=\"12\">\n              <div>\n                <NavLink exact to='/' className=\"text-primary d-flex align-items-center\">\n                  <i className=\"fas fa-arrow-circle-left mr-1\"/>\n                  <p className=\"font-weight-bold mb-0\">Back To Dashboard</p>\n                </NavLink>\n              </div>\n            </Col>\n          </Row>\n          <Row className=\"mt-3\">\n            <Col sm=\"12\">\n              <Card>\n                <CardHeader>Edit Settings</CardHeader>\n                <CardBody>\n                  {(isLoaded(setting) && !isEmpty(setting)) && <ClientForm\n                    firstName={this.state.firstName}\n                    lastName={this.state.lastName}\n                    email={this.state.email}\n                    mobile={this.state.mobile}\n                    balance={this.state.balance}\n                    handleChange={this.handleChange}\n                    handleSubmit={this.handleSubmit}\n                    disableBalance={setting.disabledBalanceOnAdd}\n                  />}\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch =>{\n  return{\n    addClient: (clientDetail) => dispatch(addClient(clientDetail))\n  }\n};\n\nconst mapStateToProps = ({ firebase: { auth }, firestore: { ordered }}) => {\n  return{\n    setting: ordered.setting ? ordered.setting[0]: null,\n    auth\n  }\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect(props => [\n    {\n      collection: 'setting',\n      doc: props.auth.uid\n    }\n  ])\n)(AddClient);\n","import React, {Component} from 'react';\nimport {Container, Row, Col, Card, CardBody, CardHeader} from 'reactstrap';\nimport {NavLink} from \"react-router-dom\";\nimport ClientForm from \"./ClientForm\";\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport {updateClientDetail} from \"../../store/actions/clientActions\";\nimport {isEmpty, isLoaded} from \"react-redux-firebase\";\n\nclass EditClient extends Component {\n\n  state = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    mobile: '',\n    balance: ''\n  };\n\n  componentWillReceiveProps(newProps) {\n    const { client } = newProps;\n    if(client){\n      this.setState({...client});\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.updateClientDetail(this.props.client.id, this.state);\n    this.props.history.push('/');\n  };\n\n  render() {\n    const {client, setting} = this.props;\n    return (\n      (client) ? <div>\n        <Container>\n          <Row>\n            <Col sm=\"12\">\n              <div>\n                <NavLink exact to='/' className=\"text-primary d-flex align-items-center\">\n                  <i className=\"fas fa-arrow-circle-left mr-1\"/>\n                  <p className=\"font-weight-bold mb-0\">Back To Dashboard</p>\n                </NavLink>\n              </div>\n            </Col>\n          </Row>\n          <Row className=\"mt-3\">\n            <Col sm=\"12\">\n              <Card>\n                <CardHeader>Edit Settings</CardHeader>\n                <CardBody>\n                  {(isLoaded(setting) && !isEmpty(setting)) && <ClientForm\n                    firstName={this.state.firstName}\n                    lastName={this.state.lastName}\n                    email={this.state.email}\n                    mobile={this.state.mobile}\n                    balance={this.state.balance}\n                    handleChange={this.handleChange}\n                    handleSubmit={this.handleSubmit}\n                    disableBalance={setting.disabledBalanceOnEdit}\n                  />}\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div> : <div/>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    updateClientDetail: (id, clientDetail) => dispatch(updateClientDetail(id, clientDetail))\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const doc = state.firestore.ordered;\n  return{\n    id: ownProps.match.params.id,\n    auth: state.firebase.auth,\n    client: doc.clients ? doc.clients[0] : null,\n    setting: doc.setting ? doc.setting[0]: null,\n  }\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect(props => [\n    {\n      collection: 'clients',\n      doc: props.id\n    },\n    {\n      collection: 'setting',\n      doc: props.auth.uid\n    }\n  ])\n)(EditClient);\n","import React, { useState, useEffect } from 'react';\nimport {Container, Row, Col, Card, CardBody, CardHeader, CustomInput} from 'reactstrap';\nimport {NavLink} from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { updateSetting } from \"../../store/actions/settingActions\";\n\nconst Setting = ({setting, updateSetting}) => {\n\n  const [allowNewClient, setAllowNewClient] = useState();\n  const [disabledBalanceOnAdd, setDisabledBalanceOnAdd] = useState();\n  const [disabledBalanceOnEdit, setDisabledBalanceOnEdit] = useState();\n  const [hasUpdated, setHasUpdated] = useState(false);\n\n  useEffect(() => {\n    setAllowNewClient(setting ? setting.allowNewClient: false);\n    setDisabledBalanceOnAdd(setting ? setting.disabledBalanceOnAdd: false);\n    setDisabledBalanceOnEdit(setting ? setting.disabledBalanceOnEdit: false);\n  },[setting]);\n\n  const update = (e) => {\n    if(e.target.id === 'allowNewClient'){\n      setAllowNewClient(!allowNewClient);\n    }else if(e.target.id === 'disabledBalanceOnAdd'){\n      setDisabledBalanceOnAdd(!disabledBalanceOnAdd);\n    }else{\n      setDisabledBalanceOnEdit(!disabledBalanceOnEdit);\n    }\n    setHasUpdated(true);\n  };\n\n  useEffect(() => {\n    if(hasUpdated){\n      updateSetting({allowNewClient, disabledBalanceOnAdd, disabledBalanceOnEdit});\n      setHasUpdated(false);\n    }\n  },[hasUpdated]);\n  return (\n    <Container>\n      <Row>\n        <Col sm=\"12\">\n          <div>\n            <NavLink exact to='/' className=\"text-primary d-flex align-items-center\">\n              <i className=\"fas fa-arrow-circle-left mr-1\"/>\n              <p className=\"font-weight-bold mb-0\">Back To Dashboard</p>\n            </NavLink>\n          </div>\n        </Col>\n      </Row>\n      <Row className=\"mt-3\">\n        <Col sm=\"12\">\n          <Card>\n            <CardHeader>Edit Settings</CardHeader>\n            <CardBody>\n              <div>\n                <CustomInput type=\"checkbox\" checked={allowNewClient} id=\"allowNewClient\" label=\"Allow New Client\" inline onChange={update}/>\n              </div>\n              <div>\n                <CustomInput type=\"checkbox\" checked={disabledBalanceOnAdd} id=\"disabledBalanceOnAdd\" label=\"Disable Balance on Add\" inline onChange={update}/>\n              </div>\n              <div>\n                <CustomInput type=\"checkbox\" checked={disabledBalanceOnEdit} id=\"disabledBalanceOnEdit\" label=\"Disable Balance of Edit\" inline onChange={update}/>\n              </div>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    updateSetting: (updatedSetting) => dispatch(updateSetting(updatedSetting))\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const doc = state.firestore.ordered;\n  return{\n    id: state.firebase.auth.uid,\n    setting: doc.setting ? doc.setting[0] : null\n  }\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect(props => [\n    {\n      collection: 'setting',\n      doc: props.id\n    },\n  ])\n)(Setting);\n","import {firestore} from \"../../config/fbConfig\";\n\nexport const updateSetting = (updatedSetting) => {\n  return (dispatch, getState) => {\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('setting').doc(authorId).set(updatedSetting).then(() => {\n      dispatch({\n        type: 'UPDATE_SETTING',\n        data: updatedSetting\n      })\n    }).catch((err) => {\n      dispatch({type: 'UPDATE_SETTING_ERROR', err: err.message})\n    });\n  };\n};","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { isLoaded } from 'react-redux-firebase';\n\nconst ProtectedRoute = ({component: Component, auth, ...rest}) => {\n  return (\n    <Route {...rest} render={\n      (props) => {\n        if(isLoaded(auth)){\n          if(auth.uid){\n            return <Component {...props}/>\n          }else{\n            return <Redirect to=\"/login\"/>\n          }\n        }\n      }\n    }/>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return{\n    auth: state.firebase.auth\n  }\n};\n\nexport default connect(mapStateToProps)(ProtectedRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { isLoaded } from 'react-redux-firebase';\n\nconst NotProtectedRoute = ({component: Component, auth, ...rest}) => {\n  return (\n    <Route {...rest} render={\n      (props) => {\n        if(isLoaded(auth)){\n          if(!auth.uid){\n            return <Component {...props}/>\n          }else{\n            return <Redirect to=\"/\"/>\n          }\n        }\n      }\n    }/>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return{\n    auth: state.firebase.auth\n  }\n};\n\nexport default connect(mapStateToProps)(NotProtectedRoute);\n","import React from 'react';\nimport {BrowserRouter, Switch, Redirect} from 'react-router-dom';\nimport Header from \"../layout/Header\";\nimport Dashboard from \"../layout/Dashboard\";\nimport SignIn from \"../auth/SignIn\";\nimport SignUp from \"../auth/Register\";\nimport ClientDetail from \"../client/ClientDetail\";\nimport AddClient from \"../client/AddClient\";\nimport EditClient from \"../client/EditClient\";\nimport Setting from \"../layout/Setting\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport NotProtectedRoute from \"./NotProtectedRoute\";\n\nconst Router = () => {\n  return(\n    <BrowserRouter>\n      <div>\n        <Header/>\n        <div className=\"mt-5 pt-4 mb-5\">\n          <Switch>\n            <NotProtectedRoute path='/login' component={SignIn}/>\n            <NotProtectedRoute path='/register' component={SignUp}/>\n            <ProtectedRoute exact path='/' component={Dashboard}/>\n            <ProtectedRoute path='/client/:id' component={ClientDetail}/>\n            <ProtectedRoute path='/add' component={AddClient}/>\n            <ProtectedRoute path='/setting' component={Setting}/>\n            <ProtectedRoute path='/edit/:id' component={EditClient}/>\n            <ProtectedRoute path=\"*\" render = {() => <Redirect to=\"/\" />}/>\n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n  )\n};\n\nexport default Router;","import React, { Component } from 'react';\nimport Router from \"./components/routes/Router\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Router/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'LOGIN_ERROR':\n      return{\n        ...state,\n        authError: 'Login failed'\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        authError: null\n      };\n    case 'SIGNOUT_SUCCESS':\n      return{\n        ...state\n      };\n    case 'SIGNUP_SUCCESS':\n      return{\n        ...state,\n        authError: null\n      };\n    case 'SIGNUP_ERROR':\n      return{\n        ...state,\n        authError: action.err\n      };\n    default:\n      return state\n  }\n};\n\nexport default authReducer;","const initState = {\n  err : null\n};\n\nconst clientReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'ADD_CLIENT':\n      return {\n        ...state,\n        err: null\n      };\n    case 'ADD_CLIENT_ERROR':\n      return {\n        ...state,\n        err: action.err\n      };\n    case 'UPDATE_BALANCE':\n      return {\n        ...state,\n        err: null\n      };\n    case 'UPDATE_BALANCE_ERROR':\n      return {\n        ...state,\n        err: action.err\n      };\n    case 'DELETE_CLIENT':\n      return {\n        ...state,\n        err: null\n      };\n    case 'DELETE_CLIENT_ERROR':\n      return {\n        ...state,\n        err: action.err\n      };\n    case 'UPDATE_CLIENT_DETAIL':\n      return {\n        ...state,\n        err: null\n      };\n    case 'UPDATE_CLIENT_DETAIL_ERROR':\n      return {\n        ...state,\n        err: action.err\n      };\n    default:\n      return state\n  }\n};\n\nexport default clientReducer;","const initState = {\n  err: null\n};\n\nconst settingReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'UPDATE_SETTING':\n      return {\n        ...state,\n        err: null\n      };\n    case 'UPDATE_SETTING_ERROR':\n      return {\n        ...state,\n        err: action.err\n      };\n    default:\n      return state\n  }\n};\n\nexport default settingReducer;","import authReducer from './authReducer';\nimport clientReducer from './clientReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\nimport settingReducer from \"./settingReducers\";\n\nconst rootReducer = combineReducers({\n  setting: settingReducer,\n  auth: authReducer,\n  client: clientReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\nimport { createFirestoreInstance} from 'redux-firestore';\nimport { firebase } from './config/fbConfig';\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport {applyMiddleware, compose, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\n\n// react-redux-firebase config\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n};\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(thunk)\n  // window.navigator.userAgent.includes('Chrome') ?\n  //   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() : compose\n));\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance // <- needed if using firestore\n};\n\nReactDOM.render(<Provider store={store}><ReactReduxFirebaseProvider {...rrfProps}><App /></ReactReduxFirebaseProvider></Provider>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}